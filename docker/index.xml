<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dockers on Actiger跳跳虎</title>
    <link>https://charles-one.github.io/actiger/docker/</link>
    <description>Recent content in Dockers on Actiger跳跳虎</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 04 Jun 2019 23:17:06 +0800</lastBuildDate>
    
	<atom:link href="https://charles-one.github.io/actiger/docker/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Kubernetes Ingress Nginx</title>
      <link>https://charles-one.github.io/actiger/docker/kubernetes-nginx-ingress/</link>
      <pubDate>Tue, 04 Jun 2019 23:17:06 +0800</pubDate>
      
      <guid>https://charles-one.github.io/actiger/docker/kubernetes-nginx-ingress/</guid>
      <description>1. 为了理解Nginx Ingress Controller, 先看下上海长宁来福士的人脸识别电梯, 正好在这上班😃. 把外部进入内部人脸识别闸机类比为NGINX Ingress Controller, 匹配域名, 把人或请求分配到内部service. 把人脸识别分配电梯类比为service, service控制着一组电梯, 将人或请求分配service下的电梯中. 把电梯类比为pod, 在service下, 处理人或请求. 2. 下面是配置文件, 角色与service绑定的, 使用到pv和pvc, 使用secret, 我的命名空间是nginx-space  创建name-space
kubectl create namespace nginx-space  设置默认返回内容 default-backend.yaml
apiVersion: extensions/v1beta1 kind: Deployment metadata: name: default-http-backend labels: k8s-app: default-http-backend namespace: nginx-space spec: replicas: 1 template: metadata: labels: k8s-app: default-http-backend spec: terminationGracePeriodSeconds: 60 containers: - name: default-http-backend # Any image is permissable as long as: # 1. It serves a 404 page at / # 2.</description>
    </item>
    
    <item>
      <title>Kubernetes安装</title>
      <link>https://charles-one.github.io/actiger/docker/kubernetes%E5%AE%89%E8%A3%85/</link>
      <pubDate>Tue, 04 Jun 2019 21:14:43 +0800</pubDate>
      
      <guid>https://charles-one.github.io/actiger/docker/kubernetes%E5%AE%89%E8%A3%85/</guid>
      <description>1. PD安装2个Centos7.6 1816虚拟机(例如主机名cc和主机名cc2), 或2台云主机, 或VM安装虚拟机(建议使用主机同一网络).请勿使用克隆, 克隆的虚拟与原虚拟机product_uuid一致. 安装或启动过程中容易碰到问题, 日志排查图放在前面.官方安装地址 2. 安装前检查  hostname必须不一致
hostname  网络互通, 互ping
 mac ip地址不一致
ifconfig  product_uuid不一致
cat /sys/class/dmi/id/product_uuid  禁用Swap交换分区, 保证kubelet正确运行, 必须永久禁用. 在安装设置中有对应的设置.
  3. 安装前2台虚拟机都需要的设置  关闭防火墙, 不关闭集群间有些pod可能无法通信.
systemctl stop firewalld # 禁止开机启动 systemctl disable firewalld  永久禁用交换分区swap.
# vi /etc/fstab 注释最后一行的swap # 重启 reboot  装SELinux设置permissive模式
sed -i &#39;s/^SELINUX=enforcing$/SELINUX=permissive/&#39; /etc/selinux/config reboot  安装源
 # 国内 cat &amp;lt;&amp;lt;EOF &amp;gt; /etc/yum.repos.d/kubernetes.repo [kubernetes] name=Kubernetes baseurl=https://mirrors.</description>
    </item>
    
    <item>
      <title>Kubernetes太难了</title>
      <link>https://charles-one.github.io/actiger/docker/kubernetes%E5%A4%AA%E9%9A%BE%E4%BA%86/</link>
      <pubDate>Mon, 27 May 2019 00:59:47 +0800</pubDate>
      
      <guid>https://charles-one.github.io/actiger/docker/kubernetes%E5%A4%AA%E9%9A%BE%E4%BA%86/</guid>
      <description> 配置Kubernets东西太多, 很容易出错 出错信息不好找kubectl describe pod nginxllllll, 不好用 Kubernets这种复杂的配置是和docker是对立, 就不能把配置写成docker, 很多工作可以交给docker来做 很烦 更是惊了, 不能用缓存, 什么玩意, 有了缓存kubelet不能起动 </description>
    </item>
    
  </channel>
</rss>