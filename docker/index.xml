<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dockers on Actiger跳跳虎</title>
    <link>https://charles-one.github.io/actiger/docker/</link>
    <description>Recent content in Dockers on Actiger跳跳虎</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 20 Jun 2019 00:29:39 +0800</lastBuildDate>
    
	<atom:link href="https://charles-one.github.io/actiger/docker/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Ingress-Ningx配置多个SSL证书</title>
      <link>https://charles-one.github.io/actiger/docker/ingress-ningx%E9%85%8D%E7%BD%AE%E5%A4%9A%E4%B8%AAssl%E8%AF%81%E4%B9%A6/</link>
      <pubDate>Thu, 20 Jun 2019 00:29:39 +0800</pubDate>
      
      <guid>https://charles-one.github.io/actiger/docker/ingress-ningx%E9%85%8D%E7%BD%AE%E5%A4%9A%E4%B8%AAssl%E8%AF%81%E4%B9%A6/</guid>
      <description>1. 起因 我删除域名服务商对顶级域名(即一级域名)的默认的重定向, 直接指向的我服务地址 使用的通配的二级域名证书 访问顶级域名像actiger.com, 浏览器弹出安全提示了. 发现, 通配的二级域名证书不能用在actiger.com上 2. 申请顶级域名actiger.com的证书. 申请过程参照这里 3. Ingress Nginx的配置my-nginx.yml  apiVersion: extensions/v1beta1 kind: Ingress metadata: namespace: nginx-space name: my-nginx spec: tls: - hosts: - weini.actiger.com - www.actiger.com secretName: ingress-secret - hosts: - actiger.com secretName: ingress-top-secret rules: - host: weini.actiger.com http: paths: - backend: serviceName: my-nginx servicePort: 80 - host: www.actiger.com http: paths: - backend: serviceName: my-nginx servicePort: 80 - host: actiger.com http: paths: - backend: serviceName: my-nginx servicePort: 80 - host: test.</description>
    </item>
    
    <item>
      <title>Kubernetes Mariadb Mysql</title>
      <link>https://charles-one.github.io/actiger/docker/kubernetes-mariadb-mysql/</link>
      <pubDate>Wed, 05 Jun 2019 20:46:48 +0800</pubDate>
      
      <guid>https://charles-one.github.io/actiger/docker/kubernetes-mariadb-mysql/</guid>
      <description>1. 创建一个对外可使用的数据库, 外部网络访问使用NodePort. pod使用到PV,PVC, Secret. 2. 使用PV和PVC创建硬盘, PersistentVolume持久卷, 持久卷申请.  创建持久卷 pv-maria.yaml, 这里在node节点上申请hostPath申请空间
apiVersion: v1 kind: PersistentVolume metadata: name: pv-hostpath spec: capacity: storage: 300Mi accessModes: - ReadWriteOnce hostPath: path: &amp;quot;/root/mariadb&amp;quot;  创建持久卷申请pvc-maria.yaml, 申请容量与PV一致才会绑定成功.
apiVersion: v1 kind: PersistentVolumeClaim metadata: name: pvc-hostpath spec: accessModes: - ReadWriteOnce storageClassName: &amp;quot;&amp;quot; resources: requests: storage: 200Mi   3. 为数据库root密码创建Secret文件mariapass.yml. root密码需要base64转换. apiVersion: v1 kind: Secret metadata: name: mariapass type: Opaque data: password: &amp;lt;base64加密你的root密码&amp;gt; username: cm9vdA==  4.</description>
    </item>
    
    <item>
      <title>Kubernetes Ingress Nginx</title>
      <link>https://charles-one.github.io/actiger/docker/kubernetes-nginx-ingress/</link>
      <pubDate>Tue, 04 Jun 2019 23:17:06 +0800</pubDate>
      
      <guid>https://charles-one.github.io/actiger/docker/kubernetes-nginx-ingress/</guid>
      <description>1. 为了理解Nginx Ingress Controller, 先看下上海长宁来福士的人脸识别电梯, 正好在这上班😃. 把外部进入内部人脸识别闸机类比为NGINX Ingress Controller, 匹配域名, 把人或请求分配到内部service. 把人脸识别分配电梯类比为service, service控制着一组电梯, 将人或请求分配service下的电梯中. 把电梯类比为pod, 在service下, 处理人或请求. 2. 下面是配置文件, 角色与service绑定的, 使用到pv和pvc, 使用secret, 我的命名空间是nginx-space  创建name-space
kubectl create namespace nginx-space  设置默认返回内容 default-backend.yaml
apiVersion: extensions/v1beta1 kind: Deployment metadata: name: default-http-backend labels: k8s-app: default-http-backend namespace: nginx-space spec: replicas: 1 template: metadata: labels: k8s-app: default-http-backend spec: terminationGracePeriodSeconds: 60 containers: - name: default-http-backend # Any image is permissable as long as: # 1. It serves a 404 page at / # 2.</description>
    </item>
    
    <item>
      <title>Kubernetes安装</title>
      <link>https://charles-one.github.io/actiger/docker/kubernetes%E5%AE%89%E8%A3%85/</link>
      <pubDate>Tue, 04 Jun 2019 21:14:43 +0800</pubDate>
      
      <guid>https://charles-one.github.io/actiger/docker/kubernetes%E5%AE%89%E8%A3%85/</guid>
      <description>1. PD安装2个Centos7.6 1816虚拟机(例如主机名cc和主机名cc2), 或2台云主机, 或VM安装虚拟机(建议使用主机同一网络).请勿使用克隆, 克隆的虚拟与原虚拟机product_uuid一致. 安装或启动过程中容易碰到问题, 日志排查图放在前面.官方安装地址 2. 安装前检查  hostname必须不一致
hostname  网络互通, 互ping
 mac ip地址不一致
ifconfig  product_uuid不一致
cat /sys/class/dmi/id/product_uuid  禁用Swap交换分区, 保证kubelet正确运行, 必须永久禁用. 在安装设置中有对应的设置.
  3. 安装前2台虚拟机都需要的设置  关闭防火墙, 不关闭集群间有些pod可能无法通信.
systemctl stop firewalld # 禁止开机启动 systemctl disable firewalld  永久禁用交换分区swap.
# vi /etc/fstab 注释最后一行的swap # 重启 reboot  装SELinux设置permissive模式
sed -i &#39;s/^SELINUX=enforcing$/SELINUX=permissive/&#39; /etc/selinux/config reboot  安装源
 # 国内 cat &amp;lt;&amp;lt;EOF &amp;gt; /etc/yum.repos.d/kubernetes.repo [kubernetes] name=Kubernetes baseurl=https://mirrors.</description>
    </item>
    
    <item>
      <title>Kubernetes太难了</title>
      <link>https://charles-one.github.io/actiger/docker/kubernetes%E5%A4%AA%E9%9A%BE%E4%BA%86/</link>
      <pubDate>Mon, 27 May 2019 00:59:47 +0800</pubDate>
      
      <guid>https://charles-one.github.io/actiger/docker/kubernetes%E5%A4%AA%E9%9A%BE%E4%BA%86/</guid>
      <description> 配置Kubernets东西太多, 很容易出错 出错信息不好找kubectl describe pod nginxllllll, 不好用 Kubernets这种复杂的配置是和docker是对立, 就不能把配置写成docker, 很多工作可以交给docker来做 很烦 更是惊了, 不能用缓存, 什么玩意, 有了缓存kubelet不能起动 </description>
    </item>
    
  </channel>
</rss>