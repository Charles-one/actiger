<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cs on Actiger跳跳虎</title>
    <link>https://charles-one.github.io/actiger/c/</link>
    <description>Recent content in Cs on Actiger跳跳虎</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 09 Apr 2020 23:15:05 +0800</lastBuildDate>
    
	<atom:link href="https://charles-one.github.io/actiger/c/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>C程序设计语言练习1-6</title>
      <link>https://charles-one.github.io/actiger/c/c%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80%E7%BB%83%E4%B9%A01-6/</link>
      <pubDate>Thu, 09 Apr 2020 23:15:05 +0800</pubDate>
      
      <guid>https://charles-one.github.io/actiger/c/c%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80%E7%BB%83%E4%B9%A01-6/</guid>
      <description> 1. 要求: 验证表达式getchar() != EOF的值是0还是1 2. 分析. 1. getchar()是获取一个输入字符, 判断是否为输入结尾, 结尾特定EOF(End of File) 2. Linux中，在新的一行的开头，按下Ctrl-D，就代表EOF（如果在一行的中间按下Ctrl-D，则表示输出&amp;rdquo;标准输入&amp;rdquo;的缓存区，所以这时必须按两次Ctrl-D）；Windows中，Ctrl-Z表示EOF。（顺便提一句，Linux中按下Ctrl-Z，表示将该进程中断，在后台挂起，用fg命令可以重新切回到前台；按下Ctrl-C表示终止该进程。） 3. 代码 1. 注意a = getchare() != EOF与a = (getchar() != EOF)等价, 原因是=是赋值, !=比=的优先级高, 就像四则运算/号的优先级比+号高一样. 2. while的判断到EOF时会中止执行, 里面语句不会执行, 故需要在外部打印getchar() != EOF的值.  #include&amp;lt;stdio.h&amp;gt; int main(){ int a ; while(a = (getchar() != EOF)){ printf(&amp;quot;%d\n&amp;quot;, a); } printf(&amp;quot;%d\n&amp;quot;, a); return 0; }  </description>
    </item>
    
    <item>
      <title>C程序设计语言练习1-4</title>
      <link>https://charles-one.github.io/actiger/c/c%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80%E7%BB%83%E4%B9%A01-4/</link>
      <pubDate>Thu, 09 Apr 2020 22:51:12 +0800</pubDate>
      
      <guid>https://charles-one.github.io/actiger/c/c%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80%E7%BB%83%E4%B9%A01-4/</guid>
      <description> 1. 要求: 编写一个程序打印摄氏温度转换为相应华氏温度的转换表. 2. 分析. 1. 由C = (5&amp;frasl;9)(F-32)得到F = C(9&amp;frasl;5)+32 2. C摄氏和F华氏温度都有小数, 可使用float 3. 代码 注意事项: %6.1f表示6个数字宽右对齐且保留1位小数 #include&amp;lt;stdio.h&amp;gt; int main(){ float f; float c; int step = 20; int minc = -20; int maxc = 300; c = minc; printf(&amp;quot;摄氏温度转换华氏度\n&amp;quot;); while( c &amp;lt;= maxc ){ f = c * 9.0 / 5.0 + 32; printf(&amp;quot;%3.0f %6.1f\n&amp;quot;, c, f); c = c + step; } return 0; }  </description>
    </item>
    
    <item>
      <title>不准确的01-浮点数</title>
      <link>https://charles-one.github.io/actiger/c/%E4%B8%8D%E5%87%86%E7%A1%AE%E7%9A%8401-%E6%B5%AE%E7%82%B9%E6%95%B0/</link>
      <pubDate>Tue, 03 Mar 2020 11:57:04 +0800</pubDate>
      
      <guid>https://charles-one.github.io/actiger/c/%E4%B8%8D%E5%87%86%E7%A1%AE%E7%9A%8401-%E6%B5%AE%E7%82%B9%E6%95%B0/</guid>
      <description>1. 整数时, 二进制与十进制可准确转换, 小数时与二进制转换起来情况就复杂了, 二进制不能准确表示某些十进制的小数. 2. 整数, 二进制与十进制转换. 整数转换规则: 除2, 得商和余数, 商除2得商和余数, 直到商为0. 以125为例, 十进制转换为二进制.    数 商 余数     125&amp;frasl;2 62 1   62&amp;frasl;2 31 0   31&amp;frasl;2 15 1   15&amp;frasl;2 7 1   7&amp;frasl;2 3 1   3&amp;frasl;2 1 1   1&amp;frasl;2 0 1    由个位数向前除得最高位数. 125=1x2^0 + 0x2^1 + 1x2^2 + 1x2^3 + 1x2^4 + 1x2^5 + 1x2^6得到二进制数1111101 3.</description>
    </item>
    
  </channel>
</rss>